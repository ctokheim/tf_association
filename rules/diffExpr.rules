rule diffExprCtype:
    input:
        expr=join(config['data_dir'], "expr/{ctype}.txt"),
        subtypes=config['subtypes'],
        purity=config['purity'],
        mut=join(config['data_dir'], "mutation_flags/{ctype}.txt"),
        immune=config['immune']
    output:
        join(config['output'], 'gene_correlations/{ctype}.txt')
    shell:
        "python scripts/tf_association.py "
        "   -i {input.expr} "
        "   -s {input.subtypes} "
        "   -t {input.purity} "
        "   -l "
        #"   -im {input.immune} "
        "   -m {input.mut} "
        "   -o {output} "

########################
# Differential expression adjusted for TF expression
########################
rule diffExprAdj:
    input:
        top10_list = os.path.join(config['output'], 'top10_rabit/{gene}.{ctype2}.txt'),
        subtypes=config['subtypes'],
        purity=config['purity'],
        immune=config['immune']
        # cpnum=os.path.join(config['copy_number'], 'ESCA.focal_score_by_genes.txt'),
    params:
        expr=join(config['data_dir'], "expr/{ctype2}.txt"),
        mut=join(config['data_dir'], "mutation_flags/{ctype2}.txt")
    output:
        os.path.join(config['output'], 'gene_correlations_rerun/{gene}.{ctype2}.txt')
    shell:
        "python scripts/tf_association_adjusted.py "
        "   -i {params.expr} "
        "   -s {input.subtypes} "
        "   -t {input.purity} "
        #"   -im {input.immune} "
        "   -l "
        "   -m {params.mut} "
        "   -g {wildcards.gene} "
        "   -a {input.top10_list} "
        "   -o {output} "
